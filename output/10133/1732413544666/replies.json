{"items":[{"id":"73669","user":{"id":"219792","nickname":"咚当家族编辑部","avatar_url":"https://static.codemao.cn/FiMx4sfjLjzULIJ_aHZnOg0iNPHB","subject_id":0,"work_shop_name":"","work_shop_level":0,"wuhan_medal":false,"has_signed":false},"is_top":false,"n_likes":0,"is_liked":false,"content":"<p><img src=\"https://static.codemao.cn/FuDERxlpG_bGZJGFCVg3STsgP935\"><br></p>\n<p>路过</p>\n<p><br></p>","n_comments":0,"updated_at":1522849116,"created_at":1522849116,"earliest_comments":[]},{"id":"73624","user":{"id":"347681","nickname":"欠王迷","avatar_url":"https://static.codemao.cn/FlX52zFOO8mNzYEXV98WY7ko5qlB","subject_id":1061,"work_shop_name":"幻晶工作室","work_shop_level":3,"wuhan_medal":false,"has_signed":false},"is_top":false,"n_likes":0,"is_liked":false,"content":"<p>挺不错的</p>","n_comments":0,"updated_at":1522841529,"created_at":1522841529,"earliest_comments":[]},{"id":"73623","user":{"id":"347681","nickname":"欠王迷","avatar_url":"https://static.codemao.cn/FlX52zFOO8mNzYEXV98WY7ko5qlB","subject_id":1061,"work_shop_name":"幻晶工作室","work_shop_level":3,"wuhan_medal":false,"has_signed":false},"is_top":false,"n_likes":0,"is_liked":false,"content":"<p>是转发的啊</p>","n_comments":0,"updated_at":1522841522,"created_at":1522841522,"earliest_comments":[]},{"id":"73622","user":{"id":"343209","nickname":"FATAL_ERROR","avatar_url":"https://static.codemao.cn/Fn072jsWbNIw-PSGxAP_4xK34aF7","subject_id":0,"work_shop_name":"","work_shop_level":0,"wuhan_medal":false,"has_signed":false},"is_top":false,"n_likes":0,"is_liked":false,"content":"<p>你把我话题抢了<img src=\"http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/1a/bs_thumb.gif\"></p>\n<p><br></p>","n_comments":0,"updated_at":1522841426,"created_at":1522841426,"earliest_comments":[]},{"id":"73585","user":{"id":"331152","nickname":"顺铂","avatar_url":"https://cdn-community.codemao.cn/47/community/d2ViXzEwMDFfMzMxMTUyXzMzMTE1Ml8xNjYyNzg3ODIzNjU5X2RhODRlZDVm.jpeg","subject_id":0,"work_shop_name":"","work_shop_level":0,"wuhan_medal":false,"has_signed":false},"is_top":false,"n_likes":0,"is_liked":false,"content":"<p>转自</p>\n<p>上：<a href=\"http://www.ruanyifeng.com/blog/2013/02/booting.html\" rel=\"nofollow\">http://www.ruanyifeng.com/blog/2013/02/booting.html</a></p>\n<p>下：<a href=\"http://www.ruanyifeng.com/blog/2013/08/linux_boot_process.html\" rel=\"nofollow\">http://www.ruanyifeng.com/blog/2013/08/linux_boot_process.html</a></p>\n<p><br></p>","n_comments":0,"updated_at":1522816988,"created_at":1522816988,"earliest_comments":[]},{"id":"73566","user":{"id":"333563","nickname":"天下丶男王","avatar_url":"https://static.codemao.cn/07c6d253-b1b8-4fd5-90ff-851970652ae9","subject_id":4163,"work_shop_name":"天下丶皇族","work_shop_level":0,"wuhan_medal":false,"has_signed":false},"is_top":false,"n_likes":0,"is_liked":false,"content":"<p><p>给大佬端水</p></p>","n_comments":0,"updated_at":1522762795,"created_at":1522762795,"earliest_comments":[]},{"id":"73565","user":{"id":"331152","nickname":"顺铂","avatar_url":"https://cdn-community.codemao.cn/47/community/d2ViXzEwMDFfMzMxMTUyXzMzMTE1Ml8xNjYyNzg3ODIzNjU5X2RhODRlZDVm.jpeg","subject_id":0,"work_shop_name":"","work_shop_level":0,"wuhan_medal":false,"has_signed":false},"is_top":false,"n_likes":0,"is_liked":false,"content":"<p><p>--------------------------接上文---------------------------</p>\n<p>下面就是链接文件真正的指向。 　　</p>\n<p>$ ls -l /etc/rc2.d 　　 　　</p>\n<p>README 　　</p>\n<p>S01motd -&gt; ../init.d/motd 　　</p>\n<p>S13rpcbind -&gt; ../init.d/rpcbind 　　S</p>\n<p>14nfs-common -&gt; ../init.d/nfs-common 　　</p>\n<p>S16binfmt-support -&gt; ../init.d/binfmt-support 　　</p>\n<p>S16rsyslog -&gt; ../init.d/rsyslog 　　</p>\n<p>S16sudo -&gt; ../init.d/sudo 　　</p>\n<p>S17apache2 -&gt; ../init.d/apache2 　　</p>\n<p>S18acpid -&gt; ../init.d/acpid 　　... 　　</p>\n<p>&nbsp;这样做的另一个好处，就是如果你要手动关闭或重启某个进程，直接到目录 /etc/init.d 中寻找启动脚本即可。</p>\n<p>比如，我要重启Apache服务器，就运行下面的命令： 　　</p>\n<p>$ sudo /etc/init.d/apache2 restart 　　&nbsp;</p>\n<p>/etc/init.d 这个目录名最后一个字母d，是directory的意思，表示这是一个目录，用来与程序 /etc/init 区分。&nbsp;</p>\n<p><font size=\"6\">第五步、用户登录</font>&nbsp;</p>\n<p>开机启动程序加载完毕以后，就要让用户登录了。</p>\n<p><img src=\"https://static.codemao.cn/Ft554sEqUhwZXYDPVhfpmI6pGH1J\"><br></p>\n<p>一般来说，用户的登录方式有三种： 　　</p>\n<p>（1）命令行登录 　　</p>\n<p>（2）ssh登录 　　</p>\n<p>（3）图形界面登录</p>\n<p>这三种情况，都有自己的方式对用户进行认证。&nbsp;</p>\n<p>（1）命令行登录：init进程调用getty程序（意为get teletype），让用户输入用户名和密码。输入完成后，再调用login程序，核对密码（Debian还会再多运行一个身份核对程序/etc/pam.d/login）。如果密码正确，就从文件 /etc/passwd 读取该用户指定的shell，然后启动这个shell。&nbsp;</p>\n<p>（2）ssh登录：这时系统调用sshd程序（Debian还会再运行/etc/pam.d/ssh ），取代getty和login，然后启动shell。&nbsp;</p>\n<p>（3）图形界面登录：init进程调用显示管理器，Gnome图形界面对应的显示管理器为gdm（GNOME Display Manager），然后用户输入用户名和密码。如果密码正确，就读取/etc/gdm3/Xsession，启动用户的会话。</p>\n<p>&nbsp;第六步、进入 login shell&nbsp;</p>\n<p>所谓shell，简单说就是命令行界面，让用户可以直接与操作系统对话。用户登录时打开的shell，就叫做login shell。</p>\n<p><img src=\"https://static.codemao.cn/FnKoEyp8pxFxxeMO56PbDVnzMpmn\">Debian默认的shell是Bash，它会读入一系列的配置文件。上一步的三种情况，在这一步的处理，也存在差异。&nbsp;</p>\n<p>（1）命令行登录：首先读入 /etc/profile，这是对所有用户都有效的配置；然后依次寻找下面三个文件，这是针对当前用户的配置。 　　</p>\n<p>~/.bash_profile 　　</p>\n<p>~/.bash_login 　　</p>\n<p>~/.profile 　　 需要注意的是，这三个文件只要有一个存在，就不再读入后面的文件了。比如，要是 ~/.bash_profile 存在，就不会再读入后面两个文件了。 （2）ssh登录：与第一种情况完全相同。&nbsp;</p>\n<p>（3）图形界面登录：只加载 /etc/profile 和 ~/.profile。也就是说，~/.bash_profile 不管有没有，都不会运行。</p>\n<p>&nbsp;第七步，打开 non-login shell&nbsp;</p>\n<p>老实说，上一步完成以后，Linux的启动过程就算结束了，用户已经可以看到命令行提示符或者图形界面了。但是，为了内容的完整，必须再介绍一下这一步。 用户进入操作系统以后，常常会再手动开启一个shell。这个shell就叫做 non-login shell，意思是它不同于登录时出现的那个shell，不读取/etc/profile和.profile等配置文件。<br></p>\n<p><img src=\"https://static.codemao.cn/FhghZ6yxCbgHVvA6B1TsJkjx7Bz5\"><br></p>\n<p>non-login shell的重要性，不仅在于它是用户最常接触的那个shell，还在于它会读入用户自己的bash配置文件 ~/.bashrc。大多数时候，我们对于bash的定制，都是写在这个文件里面的。 你也许会问，要是不进入 non-login shell，岂不是.bashrc就不会运行了，因此bash 也就不能完成定制了？事实上，Debian已经考虑到这个问题了，请打开文件 ~/.profile，可以看到下面的代码： 　　</p>\n<p>if [ -n \"$BASH_VERSION\" ]; then 　　　　</p>\n<p>if [ -f \"$HOME/.bashrc\" ]; then 　　　　　　</p>\n<p>. \"$HOME/.bashrc\" 　　　　</p>\n<p>fi 　　</p>\n<p>fi 　　&nbsp;</p>\n<p>上面代码先判断变量 $BASH_VERSION 是否有值，然后判断主目录下是否存在 .bashrc 文件，如果存在就运行该文件。第三行开头的那个点，是source命令的简写形式，表示运行某个文件，写成\"source ~/.bashrc\"也是可以的。 因此，只要运行～/.profile文件，～/.bashrc文件就会连带运行。但是上一节的第一种情况提到过，如果存在～/.bash_profile文件，那么有可能不会运行～/.profile文件。解决这个问题很简单，把下面代码写入.bash_profile就行了。 　　</p>\n<p>if [ -f ~/.profile ]; then 　　　　</p>\n<p>. ~/.profile 　　</p>\n<p>fi 　　</p>\n<p>&nbsp;这样一来，不管是哪种情况，.bashrc都会执行，用户的设置可以放心地都写入这个文件了。 Bash的设置之所以如此繁琐，是由于历史原因造成的。早期的时候，计算机运行速度很慢，载入配置文件需要很长时间，Bash的作者只好把配置文件分成了几个部分，阶段性载入。系统的通用设置放在 /etc/profile，用户个人的、需要被所有子进程继承的设置放在.profile，不需要被继承的设置放在.bashrc。</p>\n<p>&nbsp;顺便提一下，除了Linux以外， Mac OS X 使用的shell也是Bash。但是，它只加载.bash_profile，然后在.bash_profile里面调用.bashrc。而且，不管是ssh登录，还是在图形界面里启动shell窗口，都是如此。</p>\n<p>本期教程转自</p>\n<p>上：</p>\n<p>下：</p></p>","n_comments":0,"updated_at":1522761232,"created_at":1522761232,"earliest_comments":[]}],"offset":0,"limit":30,"total":7,"counted":true}