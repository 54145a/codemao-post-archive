{"id":"8912","user":{"id":"203577","nickname":"技术喵","avatar_url":"https://static.codemao.cn/FjdGLKY8l4RINPdZ02073fwKFxPK","subject_id":228,"work_shop_name":"编程猫官方","work_shop_level":4,"wuhan_medal":false,"has_signed":false},"title":"【版本更新】编程猫积木实验室上线，人工智能AI来袭！","content":"<p>【2018.01.25版本更新内容】\n<br>编程猫积木实验室上线\n<br>1、分类AI\n<br>2、GameAI\n<br>做好准备！今天的信息量很大！！！！\n<br>\n<img src=\"https://static.codemao.cn/FtBg7LVLg25Xs34_mcbXfHB_avDj\" style=\"max-width:95%;\">\n<br>人工智能（Artificial Intelligence），英文缩写为AI\n<br>它是研究、开发用于模拟、延伸和扩展人的智能的理论、方法、技术\n<br>及应用系统的一门新的技术科学\n<br>据此，编程猫开发出了人工智能相关积木\n<br>从【积木实验室】中就可以添加使用哦\n<br>\n<img src=\"https://static.codemao.cn/FseoCVHPoqGuq4nr3hoFwoIDkrGc\" style=\"max-width:95%;\">\n<br>\n<img src=\"https://static.codemao.cn/FmOTE4pY5guK2nSEouMB5YwnBJ7M\" style=\"max-width:95%;\">\n<br>有了AI学习积木，人工智能编程不再遥远\n<br> 使用此类积木，训练师们可以制作出能进行智能学习的角色游戏\n<br>\n<img src=\"https://static.codemao.cn/FqBseblG7QiKPpygg3ZxfdqJphR1\" style=\"max-width: 95%; width: 286px; height: 92px;\">\n<br>\n<img src=\"https://static.codemao.cn/FgV0JWtCxbETW7PQpFMXL1EVoWs6\" style=\"max-width:95%;\">\n<br>使用分类AI前，技术喵先带你们了解下分类AI的基础知识！\n<br>1）什么是分类器\n<br>分类器是数据挖掘中对样本进行分类的方法的统称。\n<br>举个例子：\n<br>\n<img src=\"http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/f4/zhaji_thumb.gif\">酒类识别：我们测量一瓶酒的颜色（波长）、酒精浓度数据，把这些数据输入机器中，那么机器就可以根据这些去判断酒的种类，是啤酒红酒还是白酒。\n<br>这种可以对输入数据进行自动分类的机器，就叫做分类器。\n<br> 实现分类器有很多方法，基于神经网络的深度学习就是其中一种。\n<br>2）神经网络\n<br>神经网络是将模仿神经元的脑神经单位进行连接，形成的网络状图。 \n<br>完整的神经网络包括输入层、隐藏层、输出层\n<br>\n<img src=\"https://static.codemao.cn/FrniL4_Lty4ooj7or5robMREbLid\" style=\"max-width:95%;\">\n<br>（如图：输出层4个输入单元，隐藏层有2层，分别4个和3个隐藏单元，输出层有2个输出单元）\n<br>输入层：输入需要预测事物的特征值。\n<br>比如在酒类识别中，酒的特征值就是酒的颜色、酒精浓度。\n<br>↓\n<br>隐藏层：隐藏层可以是单层的，也可以是多层的。\n<br>通过复杂的隐藏层结构，提取输入数据中的显著特征，\n<br>将结果传到输出层\n<br>↓\n<br>输出层：拥有不同的输出分类结果。\n<br>比如在酒类识别中，输出的结果是啤酒、红酒、白酒。\n<br>3）神经网络训练和预测\n<br>分类器需要通过训大概地预测出分类结果。\n<br>每一组的训练数据都需要包含所有的特征值及分类类别。\n<br>而预测结果是否准确，与神经网络的结构、训练次数、甚至训练时的一些随机发生的因素都有关系，真正能够熟练地训练出效率、准确率高的神经网络，需要更多的努力！\n<br>【分类AI积木用法】\n<br>\n<img src=\"https://static.codemao.cn/FkradKHLW-uGmH9zx09E5XgZE7JO\" style=\"max-width:95%;\">\n<br>选择添加指定AI功能就会看到积木盒子列表添加了相应的AI积木\n<br>▽\n<br>1、矩阵数据积木\n<br>\n<img src=\"https://static.codemao.cn/FjlZpnCaJzvA4pDm2ZlmmOvBs_Im\" style=\"max-width:95%;\">\n<br>作用：用来直接调取指定列或行的矩阵数据。\n<br>矩阵数据分为两种： \n<br>1）训练师们自行上传相关数据的excel表格，系统会存作矩阵数据。\n<br>2）系统预制的4组矩阵数据。\n<img src=\"https://static.codemao.cn/Fje3dyPd9kWmlt5abkVrLAenm-8L\" style=\"max-width: 95%;\">\n<br>2、设置训练数据积木\n<br>\n<img src=\"https://static.codemao.cn/FnLX3uXZW8GOQYnIgfz1mmHoJI6U\" style=\"max-width:95%;\">\n<br>作用：分别设置需要训练的数据的特征和分类。\n<br>训练数据特征：必须是数字类型，非数字类型，会被自动忽略。 \n<br> 训练数据分类：支持数字和字符串形式，系统自动识别总共的类别数量。\n<br> （目前输出层只支持2种类别，否则无法运行）\n<br>3、神经网络隐含层结构积木\n<br>\n<img src=\"https://static.codemao.cn/FuVF5l_NbS9WdsDLt9sZH3JeZHyH\" style=\"max-width:95%;\">\n<br>作用：设置神经网络隐藏层结构。\n<br>不同的神经网络隐藏层结构，对最后的训练结果会产生不同的影响\n<br>\n<img src=\"https://static.codemao.cn/Fo3-ZmbV340q0_YsdBsytyQwHtGo\" style=\"max-width:95%;\">\n<br>4、后向传播算法（训练积木）\n<br>\n<img src=\"https://static.codemao.cn/Fkvi3-FJFYX2ck7fSAA6fTLON3t-\" style=\"max-width:95%;\">\n<br>作用：对训练数据使用特定算法进行训练，并存为模型\n<br>在训练的过程中，舞台中也会出现该模型的相关训练信息\n<br>当输出层为非2时，无法显示预测的图像\n<br>▽\n<br>\n<img src=\"https://static.codemao.cn/FookxoYnSkLidqSt8F66vO6K04MW\" style=\"max-width:95%;\">\n<br>当输入层也就是训练特征为2时，还会出现模型预测的训练图像。\n<br>▽\n<br>\n<img src=\"https://static.codemao.cn/Fqe94ZndrsgZ4_rdnW1Mu9ylwSh0\" style=\"max-width:95%;\">\n<br>随着训练次数的增多，预测的模型也会更加准确\n<br>▽\n<br>\n<img src=\"https://static.codemao.cn/FkmSmqCE2Y6SJq9gm6DnZaTH2BoR\" style=\"max-width: 95%;\">\n<br>5、预测分类积木\n<br>\n<img src=\"https://static.codemao.cn/FrnC3zlU6RvE2IUUEg22pMNP8-uu\" style=\"max-width:95%;\">\n<br>作用：用训练数据训练完存作的模型，对新的输入特征进行分类预测。\n<br>注意：预测的特征值数量需要与原训练数据的特征值数量一致，\n<br>否则无法预测结果。\n<br>预测出的结果分为两种形式：\n<br>（1）预测分类结果\n<br>\n<img src=\"https://static.codemao.cn/FurPg3LNG28CBH3_j5mXC0_pW2Hb\" style=\"max-width:95%;\">\n<br>作用：直接显示预测的分类结果，输出形式为变量。\n<br>\n<img src=\"https://static.codemao.cn/Fle2n4Td3ShYMaAUVOOjLPWdW8IM\" style=\"max-width:95%;\">\n<br>\n<img src=\"https://static.codemao.cn/FowRSggxzAycNdENG0PqqhKcYxkj\" style=\"max-width:95%;\">\n<br>（2）预测分类概率\n<br>\n<img src=\"https://static.codemao.cn/FmTQSymaVnPMe-Da7zcm2cxopaIk\" style=\"max-width:95%;\">\n<br>作用：显示该组特征值中，不同分类结果的概率，输出形式为列表。\n<br>\n<img src=\"https://static.codemao.cn/Fnkj7dRtuNLl47fwPVqkyfExMvVE\" style=\"max-width:95%;\">\n<br>\n<img src=\"https://static.codemao.cn/Fg6rSYKiZYyfASoTH4k-7_8GYVOJ\" style=\"max-width:95%;\">\n<br>【分类AI效果展示】\n<br>\n<iframe src=\"https://ide.codemao.cn/we/1330159\" width=\"640\" height=\"498\"></iframe>\n<br>\n<img src=\"https://static.codemao.cn/FrB8KbhgjarrZv4pze-t1L-8axy4\" style=\"max-width: 95%; width: 297px; height: 86px;\">\n<br>人工智能的发展是全方位的，在游戏领域也是这样。\n<br>传说中战胜围棋世界冠军的人工智能程序AlphaGo（阿法狗）\n<br>它主要工作原理，就是利用神经网络的深度学习算法。\n<br>那么AI是如何利用神经网络结构来工作的呢？\n<br>还记得分类AI的工作原理吧？\n<br>一个完整的神经网络包括了输入层、隐藏层、输出层\n<br> GameAI也是相同的\n<br>▼\n<br>\n<img src=\"https://static.codemao.cn/FrD-5RVyxlZoekJa6mh73956rYb_\" style=\"max-width:95%;\">\n<br>输入层负责收集信息，就是游戏中实时变化的数据；\n<br>比如自己角色的坐标、自己的血量、敌人的坐标、敌人的数量等等。\n<br> 这些信息导入隐藏层后进行运算和处理；\n<br>最终从输出层中输出的分类结果，就相当于我们玩游戏时做出的决策。\n<br>比如控制角色移动，控制角色跳跃，控制角色发射子弹等等。\n<br>\n<img src=\"https://static.codemao.cn/FiKpAIXLyuO1hM2VNEw8zkoWtZiG\" style=\"max-width:95%;\">\n<br>那么为了让GameAI做出正确的决策，\n<br>我们也需要对整个神经网络结构进行训练，得到我们需要的模型。\n<br>以《FlappyBird》这款游戏为例，介绍如何通过GameAI让人工智能自己玩起Flappy Bird\n<br>▼\n<br>【遗传算法--让AI自己学会玩游戏】\n<br>\n<img src=\"https://static.codemao.cn/FlRdGv4f_6cHZtupjWM5bcgmqero\">\n<br>通过生成大量的随机模型，让AI角色在游戏中不断的尝试，\n<br>这些模型有的会很快淘汰掉，有的却可以得很高的分。 \n<br> 然后通过遗传算法，将得分高的模型结构保留下来，像生物一样让他们相互之间进化，\n<br>最终训练出一代更比一代强，能够获得更高分，表现地更好的模型。\n<br>\n<img src=\"https://static.codemao.cn/lnzmaGjoO5ECdHwfi4PWMa0YXwmg\" style=\"max-width:95%;\">\n<br>1、模块初始化\n<br>首先选择需要作为AI的角色：小鸟 \n<br>\n<img src=\"https://static.codemao.cn/FvEktAD7fvWVVFI3vZZWGbQZqfvy\" style=\"max-width:95%;\">\n<br> 初始化一个模型：模型1\n<br>其中输入层和输出层的数据先空着，隐含层可以自己调整，这里设置为单层4个神经元\n<br>\n<img src=\"https://static.codemao.cn/FiYABvSl6wGh9yGZsFb9mF2etNx2\" style=\"max-width:95%;\">\n<br>对于遗传算法来说，如果每次只运行一个角色，效率太低了，\n<br>因此我们设置每轮运行数量100\n<br> 然后启动GameAI\n<br>\n<img src=\"https://static.codemao.cn/FrRlGJiqalen2bIZGER-if_mRvXO\" style=\"max-width:95%;\">\n<br>2、角色变量、事件启动\n<br>为了让这100只小鸟独立运行，我们需要改变一些游戏设置：角色变量和事件启动积木。 \n<br>1）设置角色变量 \n<br> 对于这个游戏来说，需要修改小鸟Y方向的速度为角色变量。\n<br>\n<img src=\"https://static.codemao.cn/Fk7t1t5HsO2fFkVQ1iWPwskkM6Oz\" style=\"max-width:95%;\">\n<br> 修改脚本积木中涉及到的变量：\n<br>\n<img src=\"https://static.codemao.cn/FlZFykd17Pzvp5QBI7Cd5gbsmV1A\" style=\"max-width:95%;\">\n<br>2）修改触发事件积木\n<br> 因为克隆出100只小鸟需要一定时间，为了避免部分小鸟比其他小鸟先行动，我们需要把游戏开始时的触发事件改为“当GameAI启动”使所有小鸟同步行动。\n<br>\n<img src=\"https://static.codemao.cn/FlSrg6wQH7Pavx09Uy3qkbb9TiMs\" style=\"max-width:95%;\">\n<br>3、确定输入输出信息\n<br>1）确定输入层的信息\n<br> 对于FlappyBird的这个游戏，决定小鸟能不能通过柱子最重要的因素就是：小鸟与柱子下的Y坐标。 &nbsp;&nbsp;&nbsp;&nbsp;所以我们选择的两个特征是：1、小鸟的Y坐标值，2、柱子下的Y坐标值。\n<br>\n<img src=\"https://static.codemao.cn/FudPpQUzx9Or8iIKJ9ZMxCgbxq18\" style=\"max-width:95%;\">\n<br> 将中心点设置在小鸟中间，以及柱子下的顶部中心\n<br>（如图所示的位置↓） \n<br>\n<img src=\"https://static.codemao.cn/Fk0JogTd-otTUGCGb4BeCZ-Rp7KM\" style=\"max-width:95%;\">\n<br>2）确定输出层的信息\n<br>我们自己玩这个游戏时，会有两种操作结果：什么都不做，和点击鼠标\n<br>那么对应到GameAI，就会是两个输出结果：1、不操作，2、使小鸟飞行。\n<br>我们需要先把游戏本身鼠标点击触发的事件（飞行），用函数封装起来。\n<br>\n<img src=\"https://static.codemao.cn/FsnjgEYSM056FMvmxeDzPabPx5Xy\" style=\"max-width:95%;\">\n<br>然后才能选择AI角色使用行为：不操作和飞行，AI的使用行为必须是函数形式。\n<br>\n<img src=\"https://static.codemao.cn/FrmpKjGSLjjiGiXLAJLbZKT2d2tB\" style=\"max-width: 95%;\">\n<br>设置AI角色死亡条件：\n<br>\n<img src=\"https://static.codemao.cn/Ft-gtlKNVQ51vpHaHQxLV1NPd4tz\" style=\"max-width:95%;\">\n<br> 然后设置实时读取的AI角色特征值：\n<br>\n<img src=\"https://static.codemao.cn/FgAZlTThNmG4hYhskT0EJwEBdtID\" style=\"max-width:95%;\">\n<br>3）完善输入输出数量 \n<br> 确认了输入输出信息后，还要记得在初始化模型的位置填入输入层和输出层的数量，完成整个模型的设定。 \n<br>输入层输入的特征是小鸟的Y坐标和柱子下的Y坐标，所以是2个； \n<br>输出层输出的是不操作和飞翔，所以也是2个。\n<br>\n<img src=\"https://static.codemao.cn/FiDLfofXVdUfHsrqsus-XGK2UljP\" style=\"max-width:95%;\">\n<br>4、GameAI决策\n<br>让AI基于当前的特征值做出使用行为的决策，即不操作或飞行。\n<br>\n<img src=\"https://static.codemao.cn/FnNs3Bb-IcypyiLglK_UebLbBAoX\" style=\"max-width:95%;\">\n<br>5、遗传算法\n<br>当AI角色死亡时，记录AI角色的得分，等到所有AI角色都死亡，就能从中找出这一批里更好的模型。\n<br>\n<img src=\"https://static.codemao.cn/Fm9-HqC6xJY49VWBb3Q-mSIKX4Jr\" style=\"max-width:95%;\">\n<br>当所有的AI角色都死亡后，使用“遗传算法”优化模型，并重启GameAI进行下一次预测。\n<br>\n<img src=\"https://static.codemao.cn/FuU2ERkM5CnKLZTUIpP4a5UvfQNf\" style=\"max-width:95%;\">\n<br>训练完毕后，如果想保留之前的训练结果，记得移开初始化模型积木哦，这样程序才会在之前模型1的基础上继续优化模型！\n<br>\n<img src=\"https://static.codemao.cn/FsHzkyhAZPueZHPiJcAxA2PSNEPF\" style=\"max-width:95%;\">\n<br>6、使用模型\n<br>模型训练完毕，我们可以使用模型，让AI角色自动游戏啦！ \n<br>使用模型，启动GameAI。\n<br>\n<img src=\"https://static.codemao.cn/FkCV6lzE_gcX8XdwUIgA3V0pzb1M\" style=\"max-width:95%;\">\n<br>【GameAI效果展示】\n<br>\n<iframe src=\"https://ide.codemao.cn/we/1331737\" width=\"640\" height=\"498\"></iframe>\n<br>（建议购买代码，实际操作一下哦~）\n<br>\n<img src=\"https://static.codemao.cn/Fh-zC4TYmUE29dBQeFEGvFLsOQvz\" style=\"max-width:95%;\">\n<br>如果对模型满意的话，我们还可以用AI模型制作AI游戏哦~\n<br>像是改编游戏，控制水管，给AI角色制造难度\n<br>▽\n<br>\n<img src=\"https://static.codemao.cn/loP-Opm-sZER0ikGOrcvPAOZjBm7\" style=\"text-align: left; max-width: 95%;\">\n<br>积木实验室后续还会增加更多功能块，以及《源码图鉴》的相关更新内容哦！\n<br>\n<img src=\"https://static.codemao.cn/FmTixuaRe57Y0kPdpaqlN-p6ze7M\" style=\"max-width:95%;\">\n<br>咳咳，此次更新内容略有难度，萌新们别担心，之后会有详细教学哦~\n<br>dalao们请尽情食用！\n<br></p>","board_id":"7","board_name":"灌水池塘","updated_at":1520126833,"created_at":1516877489,"n_views":1945,"n_replies":37,"n_comments":3,"is_authorized":true,"is_featured":true,"is_hotted":false,"is_pinned":false,"tutorial_flag":0,"ask_help_flag":0}